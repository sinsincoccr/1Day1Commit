정보처리기사 실기


1 장. 요구사항 확인 
1. 소프트웨어 생명주기 : 소프트웨어를 개발하기 위한 과정을 단계별로 나눈 것 
  ① 폭포수모형 
    - 고전적 생명주기, 각 단계가 끝난 후 다음 단계 수행, 단계별 결과물 명확 
  ② 프로토타입모형 
    - 견본품을 만들어 최종 결과물 확인 
  ③ 나선형모형 
    - 여러 번의 개발과정을 거쳐 점진적으로 개발하는 모형 
    - 보헴이 제안, 유지보수 과정 불필요 
    - 진행 방법 : 계획수립-위험분석-개발및검증-고객평가 (계위개고) 
  ④ 애자일모형 
    - 요구사항에 유연하게 대응 가능 
    - 일정한 주기를반복하며 개발 
    - 폭포수 모형과 대조 
    - 핵심가치 : 상호작용 중요, SW 중요, 변화에 반응 중요 
    - 대표적 개발모형 
      ㅁ 스크럼 
        ㄴ 팀이 중심이 되어 개발의 효율을 높이는 기법 
        ㄴ 스크럼 팀 구성 
          : PO(제품책임자, 백로그 작성 주체) , SM(스크럼마스터, 가이드역할), DT(개발팀) 
        ㄴ 스크럼 과정 순서 : 백로깅 – 스프린트 계획회의- 스프린트(개발)- 검토 – 회고 
      ㅁ XP(eXtreme Programming) 
        ㄴ 고객의 참여와 개발 과정의 반복을 극대화 하여 생산성을 확대 
        ㄴ 핵심가치 : 의사소통, 단순성, 용기, 존중, 피드백 (피존의 단순한 용기) 
        ㄴ 개발 프로세스 : 릴리즈 계획수립-이터레이션(개발)-승인검사-릴리즈 
        ㄴ 주요 실천 방법 
          - 짝 프로그래밍 (Pair) : 함께 개발->책임 공동 
          - 공통코드소유(Collective OwnerShip) : 코드에 대한 권한과 책임을 공동 소유 
          - 테스트 주도 개발 : 개발전 테스트 케이스 먼저 작성 
          - 전체 팀 : 개발 참여 모든 구성원들에게 책임 
          - 계속적인 통합 : 개발된 코드들은 작업이 마무리 될 때마다 통합됨 
          - 리팩토링 : 프로그램 기능 변경없이 시스템을 재구성-> 쉽게 이해하고, 수정 용이 
          - 소규모 릴리즈 : 잦은 릴리즈로 고객 요구 변화에 식속 대응 
      ㅁ 칸반 
      ㅁ Lean 
      ㅁ 기능중심개발 (FDD) 
      ⑤ 소프트웨어 공학 : 소프트웨어의 위기를 극복하기 위한 방안으로 연구된 학문 

  2. 운영체제 
    - 컴퓨터 시스템의 자운을 효율적으로 관리 
    - 컴퓨터를 편리하고 효율적으로 사용할 수 있도록 환경을 제공하는 소프트웨어 
    - 운영체제 고려사항(5) : 가용성, 성능, 기술지원, 주변기기, 구축비용 
  3. DBMS (데이터베이스 관리 시스템) 

    - 사용자와 데이터베이스 사이에서 정보 생성 및 데이터 베이스 관리 소프트웨어 
    - DBMS 고려사항(5): 가용성, 성능, 기술지원, 상호호환성, 구축비용 

  4. WAS (웹어플리케이션 서버)
    - 동적인 컨텐츠를 처리하기 위해 사용되는 미들웨어 
    - 서버 사이에서 인터페이스 역할을 수행 
    - 데이터접근, 세션관리, 트랜잭션 관리 등을 위한 라이브러리 제공 
    - 데이터베이스 서버와 연동하여 사용 
    - WAS 고려사항(4) : 가용성, 성능, 기술지원, 구축비용 

  5. 오픈소스 
    - 공개된 소프트웨어 
    - 오픈소스 고려사항 (3): 라이선스의 종류, 사용자수, 기술의 지속가능성 

  6. 요구사항 
    : 소프트웨어가 어떤 문제를 해결하기 위해 제공하는 서비스에 대한 설명과 운영되는데 필요한 제약조건 
    ① 기능 요구사항 
    - 기능, 수행에 관련된 요구사항 
    - I/O 에 대한 사항, 데이터 저장 연산 수행사항, 기능수행사항, 사용자가 제공받기를 위하는 기능 
    ② 비기능 요구사항 
    - 품질과 제약사항에 관련된 요구사항 
    - 장비 구성요구사항, 성능 요구사항, 인터페이스 요구사항, 구축에 필요한 요구사항 
    - 테스트 요구사항, 보안 요구사항 
    - 품질 요구사항 : 가용성, 정합성, 상호호환성, 대응성, 이식성, 확정성, 보안성 
    - 프로젝트 관리, 자원 요구사항 
    ③ 사용자 요구사항 
    - 사용자 관점에서 본 시스템이 제공해야할 요구사항 
    ④ 시스템요구사항 (소프트웨어 요구사항) 
    - 개발자 관점에서 본 시스템 전체가 제공해야 할 요구사항 

  7. 요구사항 개발 프로세스 : 도출- 분석- 명세- 확인 (도요명확) 
    ① 요구사항 도출 
      - 요구사항을 식별하고 이해하는 과정 
      - 소프트웨어 개발 생명 주기 동안 지속적으로 반복 
      - 요구사항 도출 기법 
        ㄴ 청취, 인터뷰, 설문, 워크샵, 프로토타이핑, 유스케이스(요구사항을 기능 단위로 표현) 
    ② 요구사항 분석 
      - 요구사항의 타당성을 조사하고 비용과 일정에 대한 제약을 설정 
      - 개발 대상에 대한 사용자의 요구사항을 이해하고 문서화 하는 활동 
      - 구조적 분석 기법 
      - 자료의 흐름과 처리를 중심으로 하는 요구사항 분석 방법 
      - 하향식 방법 사용, 중복을 배제 
      - 구조적 분석 기법 도구 
    I. 자료 흐름도 (DFD) = 버블 차트 , 자료 흐름 그래프 
      ㄴ 자료의 흐름 및 변환 과정과 기능을 도형 중심으로 기술 하는 방법 
      ㄴ PDDT 
      ㄴ Process, Data Flow, Data Store, Terminator 
      ㄴ 프로세스, 자료흐름, 자료 저장소, 단말 
    II. 자료사전 (DD) = 메타 데이터 
      ㄴ 자료 흐름도에 있는 자료를 정의하고 기록한 것 
      ㄴ = (정의), +(자료연결), ( )(자료생략), [ ](자료 선택, OR), { } (자료 반복), * *(주석) 
    III. 소단위 명세 (Mini-Spec) 
    IV. 개체관계도 (ERD) 
    V. 상태전이도 (STD) 
    VI. 제어 명세서 
    ③ 요구사항 명세 
      - 요구사항을 바탕으로 모델을 작성하고 문서화 하는 것 
      - 기능 요구사항 필수, 비기능 요구사항 선택 
      - Mini-Spec 사용 
      - 요구사항 명세 기법 
    ④ 요구사항 확인 
      - 요구사항 명세서가 정확하고 완전하게 작성되었는지 검토 
      - 문서들에 대한 형상 관리 수행 














